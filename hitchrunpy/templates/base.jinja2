# -*- coding: utf-8 -*-
import sys

if sys.version_info[0] == 3:
    unicode = str

def not_equal(lhs, rhs):
    import json

    with open("{{ error_path }}", "w") as handle:
        handle.write(json.dumps({
            "event": "notequal",
            "lhs": repr(lhs),
            "rhs": repr(rhs),
        }))

{% if long_strings %}
{% for name, value in long_strings.items() %}
{{ name }} = u"""{{ value }}"""
{% endfor %}
{% endif %}

{% if code or setup_code %}
try:
    {{ setup_code|indent(4) }}

    {{ code|indent(4) }}
except Exception as error:
    import json

    with open("{{ error_path }}", "w") as handle:
        tb = sys.exc_info()[2]
        # Create list of tracebacks
        tracebacks = []
        tb_id = 0
        while tb is not None:
            filename = tb.tb_frame.f_code.co_filename
            if filename == '<frozen importlib._bootstrap>':
                break

            tracebacks.append({
                "id": tb_id,
                "filename": tb.tb_frame.f_code.co_filename,
                "line": tb.tb_lineno,
            })
            tb_id = tb_id + 1
            tb = tb.tb_next

        handle.write(json.dumps({
            "event": "exception",
            "exception_type": "{}.{}".format(
                type(error).__module__, type(error).__name__
            ),
            "text": unicode(error),
            "tracebacks": tracebacks,
        }))
    
    sys.exit(0)
{% endif %}

{% block main %}

{% endblock %}
