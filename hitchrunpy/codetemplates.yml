base: |
  # -*- coding: utf-8 -*-
  import sure
  import sys
  
  if sys.version_info[0] == 3:
    unicode = str
  
  {% if setup %}
  try:
      {{ setup|indent(4) }}
  except Exception as error:
      import json

      with open("{{ error_path }}", "w") as handle:
          handle.write(json.dumps({
              "exception_type": "{}.{}".format(
                  type(error).__module__, type(error).__name__
              ),
              "text": unicode(error),
          }))
  {% endif %}
  
  {% block main %}

  {% endblock %}
is_equal: |
  {% extends 'base' %}

  {% block main %}
  try:
      ({{ lhs }}).should.be.equal({{ rhs }})
  except Exception as error:
      import json

      with open("{{ error_path }}", "w") as handle:
          handle.write(json.dumps({
              "exception_type": "{}.{}".format(
                  type(error).__module__, type(error).__name__
              ),
              "text": unicode(error),
          }))
  {% endblock %}
run_code: |
  {% extends 'base' %}

  {% block main %}
  try:
      {{ code|indent(4) }}
  except Exception as error:
      import json

      with open("{{ error_path }}", "w") as handle:
          handle.write(json.dumps(
              "exception_type": "{}.{}".format(
                  type(error).__module__, type(error).__name__
              ),
              "text": unicode(error),
          ))
  {% endblock %}
